---
interface Props {
  skills: Array<{
    category: string;
    skills: Array<{
      name: string;
      level: 'expert' | 'advanced' | 'intermediate' | 'basic';
      keywords: string[];
    }>;
  }>;
}

const { skills } = Astro.props;

const levelColors = {
  expert: 'bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300',
  advanced: 'bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300',
  intermediate: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/50 dark:text-yellow-300',
  basic: 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-300'
};

const levelText = {
  expert: '专家',
  advanced: '熟练',
  intermediate: '良好',
  basic: '基础'
};
---

<section class="print:break-inside-avoid">
  <h2 class="section-title">技能专长</h2>
  
  <div class="space-y-6">
    {skills.map((category) => (
      <div class="space-y-4">
        <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200">
          {category.category}
        </h3>
        
        <div class="space-y-4">
          {category.skills.map((skill) => (
            <div class="space-y-2">
              <div class="flex items-center justify-between">
                <span class="text-secondary font-medium">{skill.name}</span>
                <span class={`px-2 py-0.5 text-sm rounded-full ${levelColors[skill.level]}`}>
                  {levelText[skill.level]}
                </span>
              </div>
              
              <div class="flex flex-wrap gap-2">
                {skill.keywords.map((keyword) => (
                  <span class="skill-tag">
                    {keyword}
                  </span>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    ))}
  </div>
</section> 