---
interface Props {
  education: Array<{
    institution: string;
    area: string;
    studyType: string;
    startDate: Date;
    endDate?: Date;
    score?: string;
    courses?: string[];
  }>;
}

const { education } = Astro.props;

function formatDate(date: Date) {
  return date.toLocaleDateString('zh-CN', { year: 'numeric', month: 'numeric' });
}
---

<section class="mb-8 print:mb-6 print:break-inside-avoid">
  <h2 class="text-2xl font-bold mb-4 text-gray-800 dark:text-gray-200">教育经历</h2>
  
  <div class="space-y-4">
    {education.map((edu) => (
      <div>
        <div class="flex flex-col md:flex-row md:justify-between md:items-start gap-1">
          <div>
            <h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300">
              {edu.institution}
            </h3>
            <div class="text-gray-600 dark:text-gray-400">
              {edu.area} · {edu.studyType}
              {edu.score && <span class="ml-2">· {edu.score}</span>}
            </div>
          </div>
          <div class="text-gray-500 dark:text-gray-500 text-sm">
            {formatDate(edu.startDate)} - {edu.endDate ? formatDate(edu.endDate) : '至今'}
          </div>
        </div>
        
        {edu.courses && (
          <div class="mt-2">
            <div class="text-sm text-gray-600 dark:text-gray-400">主修课程：</div>
            <div class="mt-1 flex flex-wrap gap-2">
              {edu.courses.map((course) => (
                <span class="px-2 py-1 text-sm bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full">
                  {course}
                </span>
              ))}
            </div>
          </div>
        )}
      </div>
    ))}
  </div>
</section> 